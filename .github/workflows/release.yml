# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/loom-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle', 'gradle.properties', '**/*.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --stacktrace

      - name: Get jar
        id: getjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*.zip" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"

      - name: Get zip
        id: getzip
        run: |
          output="$(find build/libs/ ! -name "*.jar" -type f -printf "%f\n")"
          echo "::set-output name=zipname::$output"

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/libs/**

      - name: Upload mod to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.getjar.outputs.jarname }}
          asset_name: ${{ steps.getjar.outputs.jarname }}
          asset_content_type: application/java-archive

      - name: Upload datapack to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.getzip.outputs.zipname }}
          asset_name: ${{ steps.getzip.outputs.zipname }}
          asset_content_type: application/java-archive